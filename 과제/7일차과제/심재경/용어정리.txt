상속(inheritance)
-부모 클래스로 부터 자식 클래스가 필드와 메소드를
물려받는것 .
이때 상속 받는 클래스를 자식 클래스 또는 서브클래스
상속을 물려주는 클래스 부모클래스 또는 슈퍼클래스

문법 (자식)클래스명  extends (부모)클래스명  {}
Class	A 	extends B {}

-다중상속은 안되고 단일 상속만 가능하다 .
자식 클래스는 부모 클래스로 부터 메소드와 필드를 물려받는다.
부모클래스는 자식 클래스에서 정의한 메소드나 필드를 사용하지 못한다.
(자식= 자신 +부모 )
(부모 =자신 )
부모 클래스는 여러자식 클래스에게 상속이 가능하다.
자식 클래스가 더 다양한 기능이 가능하므로
자식 클래스로 인스턴스 생성 하는 것이 효율 적이다 .

장점
-중복된 코드를 줄일수 있고, 유지보수가 편리하며
통일성이 있고 다형성을 구현 할수 있다 .



접근 제어자
객체지향에서 정보 은닉(data hiding)이란 사용자가 굳이 알 필요가 없는 정보는 사용자로부터 숨겨야한다는 개념
정보 은닉을 위해 접근 제어자(access modifier) 라는 기능을 제공하고 있습니다.

네가지 접근 제어자
1. Private   -> 해당 멤버를 선언한 클래스에서만 접근 할 수 있다 .// 같은 클래스만 허용 ;
2. Public  ->public 멤버는 프로그램 어디에서 누구나 접근할 수 있습니다. //누구나 접근 허용
3. Default -> 같은 패키지만 접근 허용 / 같은 클래스도 접근 허용
4. Protected ->같은 패키지에 속하는 클래스와 다른 패키지에 속하는 자식 클래스에서만 접근 할수 있다. //같은 패키지는 접근 허용, 다른 패키지에 속하는 자식 클래스도 접근 허용
접근 제어자의 접근 범위
Public >protected >default >private



Super 키워드
슈퍼 클래스(부모) 개체를 의미한다.
슈퍼클래스(부모클래스) 메소드를 호출하고 생성자를 액세스하는데 사용된다.
가장 일반적인 용도는 동일한 이름을 가진 메소드가 있는 슈퍼(부모) 클래스와
서브(자식) 클래스 간의 혼동을 없애기 위한 것입니다 .

자바에서는 자식 객체를 생성하면 , 부모객체를 먼저 생성한 후 , 자식 객체가 그 다음에 생성됩니다.
사실 내부적으로는 부모 객체 생성후 자식 객체가 생성되는 것


this 참조 변수
-인스턴스가 바로 자기 자신을 참조하는데 사용하는 변수입니다.
이러한 this 참조변수는 해당 인스턴스의 주소를 가리키고 있다.
-생성자의 매개변수 이름과 인스턴스 변수의 이름이 같을 경우에는 인스턴스 변수 앞에 this 키워드 를 붙여 구분해야한다.
this()
는 같은 클래스의 다른 생성자를 호출 할때 사용한다.


생성자(contructor)
메소드명이 클래스명과 동일하고 리턴 자료형이 없는 매소드를 생성자라고 말한다.
생성자의 규칙
1.클래스명과 메소드 명이 동일하다 .
2.리턴타입을 정의하지 않는다.


오버라이딩 (override)
메소드 재정의 자식 클래스 에서 수정
상속된 메소드 중 일부를 자식 클래스에서 다시 수정하여 사용할 수 있게끔 해 준다.

오버로딩 (overroding)
메소드 명은 같고 ,시그니처가 다르면 다른 메소드이다 .

