과제.
아래 용어에 대해 조사하고 예제를 만들어보자!
- 상속(Inheritance)
* 부모클래스(상위클래스)와 자식클래스(하위클래스)가 있으며, 자식클래스는 부모클래스를 선택
해서, 그 부모의 멤버는 상속 받아 그대로 쓸 수 있다.
* 부모 클래스의 private 접근 제한을 갖는 필드 및 메소드는 자식이 물려 받을 수 없다.
* 부모와 자식 클래스가 서로 다른 패키지에 있다면. 부모의 default 접근 제한을 갖는 필드
및 메소드도 자식이 물려 받을 수 없다.
(default 접근 제한은 '같은 패키지에 있는 클래스'만 접근이 가능하게끔 하는 접근 제한자이다.
*그 외는 모두 상속 대상이 될 수 있다.

- 접근제어자

private -> default -> protected -> public 순으로 보다 많은 접근을 허용한다.

접근제어자가 private로 설정되었다면, private이 붙은 변수, 메소드는 해당 클래스에서만 접근이 가능하다.
default 접근제어자를 별도로 설정하지 않는다면 접근제어자가 없는 변수, 메소드는 default 접근 제어자가 되어 해당 패키지 내에서만 접근이 사능하다.
접근제어자가 protected로 설정되었다면 protected가 붙은 변수, 메소드는 동일 패키지내의 클래스 또는 해당 클래스를 상속 받은 외부 패키지의
클래스에서 접근이 가능하다.

public  누구나 사용할 수 있는 공적인이란 뜻이므로, public 접근 제어자가 붙은 변수 또는 메소드는 어떤 클래스에서라도 접근이 가능하다.
- super 키워드
부모 클래스 생성자를 호출하는 메소드이다. 그래서 자식이 부모의 기본 생성자를 항상 호출하는 것이다.

- this 키워드
1. 현재 객체를 참조하기 위한 용도
이 경우 this는 객체에 대한 참조값이다.
this는 참조값이기 때문에 객체가 생성되기 전에는 사용할 수 없다.
따라서 static 영역에서는 this 키워드를 사용할 수 없다.
2. 다른 생성자를 호출하는 용도
매개변수(파라미터)를 다르게 해서 여러 개의 생성자를 정의하는 것을 생성자 오버로딩이라고 한다.
메서드와 마찬가지로 생성자도 오버로딩이 가능하다
생성자 오버로딩 하는 이유는 다른 생성자를 호출해서 중복 코드를 제거. 이때 다른 생성자를 호출하는 키워드가 this이다.

- 생성자(Constructor)
new 연산자와 같이 사용되어 클래스로부터 객체를 생성할 때 호출되어 객체의 초기화를 담당한다.
인스턴스 변수의 초기화 작업에 주로 사용되며, 인스턴스 생성시에 실행되어야 할 작업을 위해서도 사용된다.
생성자의 이름은 클래스의 이름과 같아야 한다.
생성자는 리턴 값이 없다.
생성자도 오버로딩이 가능하므로 하나의 클래스에 여러 개의 생성자가 있을 수 있다.
생성자도 메서드이기 때문에 리턴값이 없다는 의미의 void를 적어야 하지만, 모든 생성자가 리턴값이 없으므로 void를 생략하도록 한 것이다.


- 오버로딩(Overloading)
메서드의 이름은 같고 매개변수의 유형과 개수가 다르도록 하는 것을 의미한다.
-리턴값만을 다르게 갖는 오버로딩은 작성할 수 없다.

- 오버라이딩
상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의 해서 사용하는 것을 의미한다.
메서드의 이름, 파라미터 갯수와 타입도 동일해야 한다.

- 상위 클래스
슈퍼클래스(Super Class) 또는 부모 클래스(Parent Class)라고도 한다.
바에서의 모든 클래스는 상위 클래스를 가진다.
자바 프로그램에서 사용할 수 있는 클래스중에 최상위 클래스는 java.lang.Object 클래스이다.
 즉 자바 프로그램에서 모든 클래스는 Object 클래스의 하위 클래스가 되는 것이다.
 명시적으로 상위 클래스를 명시하지 않으면 묵시적으로 Object를 상속하는 것으로 간주한다.

