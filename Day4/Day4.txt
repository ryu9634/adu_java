반복문

while 문

    while(조건식){
        조건식이 true인 동안 반복할 문장;
        ...
    }

문제.
1 ~ 100까지의 짝수의 총합을 구해보자.(while문 사용)

do ~ while 문
while문과 동일하지만 첫 반복이 false인 경우 while문은 반복을 하지 않지만,
do while문은 반복을 진행한 뒤 조건식을 판단하는 것이 다름

    do {
        조건식이 true인 동안 반복할 문장;
        ...
    }while(조건식);


for 문

    for(변수의 초기화; 조건식; 증감식){
        조건식이 true인 동안 반복할 문장;
        ...
    }

    예)
    int i = 1;
    while(i<=5){
        System.out.println("Hello Java!");
        i++;
    }
       ✔ 비교 !
    for(int i=1; i<=5; i++){
        System.out.println("Hello Java!");
    }

문제.
1 ~ 100까지의 짝수의 총합을 구해보자. (for문 사용)


continue
반복이 진행되는 도중 continue문을 만나면 반복문의 끝으로 이동하여 다음 반복으로 시작됨

    for(변수; 조건식; 증감식){
        ....
        ....
            if(조건식) continue;
        ....
    }

break
switch문 또는 반복문을 벗어날 때 사용

중첩 반복문
    while(조건식){
        while(조건식){
            ...
        }
    }

    for(변수;조건식;증감식){
        for(변수;조건식;증감식){
            ...
        }
    }

    예)
    for(int i=1; i<=5; i++){
        for(int j=1; j<=3; j++){
            System.out.println("안녕하세요. Java!");
        }
    }

문제.
구구단을 출력해보자. (while문 사용)


JVM 메모리 구조
1. Class Loader
클래스 파일들을 묶어서 JVM이 운영체제로부터 할당받은 메모리 영역인 Runtime Data Area로 적재하는 역할
2. Execution Engine
Class Loader에 의해 메모리에 적제된 클래스들을 명령어 단위로 실행하는 역할
3. Garbage Collector
Heep 메모리 영역에 생성된 객체들 중 참조되지 않은 객체들을 탐색 후 제거

메모리 영역
1. stack
지역변수, 매개변수, 리턴 값, 연산에 사용하는 임시값등이 저장되는 영역
2. heep
new 키워드로 생성된 객체와 배열이 저장되는 영역
3. method
클래스 멤버 변수의 이름, 데이터 타입, 접근 제어자 정보, 필드 정보, 메소드 이름,
static 변수, final class변수 ..
4. pc register
Thread가 생성될 때마다 생성되는 영역
5. native method stack
자바 외 언어로 작성된 네이티브 코드를 저장하기 위한 영역
(c/c++ 등의 코드를 수행하기 위한 저장소)

데이터 타입 분류
기본타입
byte, char, int, short, long, double, float, boolean

참조타입
배열, 열거, 클래스, 인터페이스


과제1.
가위바위보 게임을 만들어보자.
(단, 유저가 이길때까지 게임을 반복)


과제2.
사칙연산의 답을 맞추는 퀴즈게임을 만들어보자.
(단, 피연산자와 연산자는 모두 랜덤, 나누기는 정수로만 계산, 피연산자의 범위는 1~10이며,
10점(10문제를 맞췄을 경우)을 달성할 경우 게임종료)

4 * 2 = ? 8
맞췄습니다.(1점)
5 + 3 = 7
틀렸습니다.
9 - 2 = ? 7
맞췄습니다. (2점)
...

과제3.
로또 예측 프로그램을 만들어보자.
(단, 1~45 숫자 6개를 추출)


