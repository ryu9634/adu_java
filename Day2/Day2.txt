✔ 서적
자바의 정석
이것이 자바다

✔ 사이트
http://tcpschool.com/
https://www.w3schools.com/


변수(Variable)
하나의 값을 저장할 수 있는 메모리 공간

1. 변수의 선언
타입 변수이름;
    예) int age;

2. 변수의 초기화
변수이름 = 값;
    예) age = 20;

3. 변수의 재 대입
변수이름 = 값;
    예) age = 25;

4. 변수이름 작성방법
- 첫번째 글자는 문자 또는 "$", "_" 해야함
    apple, $apple, _apple (O)
- 숫자로 시작할 수 없음
    1apple (x)
- 대소문자 구별
    apple, Apple은 다른 변수
- 문자수의 길이 제한은 없음
    abcdefghijklmn..
- 예약어는 사용할 수 없음
    if, while, for (x)
- 첫 문자는 영어 소문자로 시작, 다른 단어가 붙을 경우 첫 문자를 대문자로 함(관례)
    jumsuNumber, myStudent


5. 기본 데이터 타입
boolean, byte, char, short, int, long, float, double

정수
byte    1byte   -128 ~ 127
char    2byte   -32768 ~ 32767 (숫자와 문자) 아스키코드 + 유니코드
short   2byte   -32768 ~ 32767
int     4byte   약 -21억 ~ 21억
long    8byte   int 이상

🎁 컴퓨터 용량단위
1bit(비트) : 0 또는 1
1byte(바이트) : 8bit
1KB(킬로바이트) : 1024byte
1MB(메가바이트) : 1024KB
1GB(기가바이트) : 1024MB
1TB(테라바이트) : 1024GB
1PB(페타바이트) : 1024TB
1EB(엑사바이트) : 1024PB

소수(실수)
float   4byte   소수점 6자리
double  8byte   그 이상

문자
char    2byte   유니코드
    예) char ga = '가';
    ✔ 문자를 저장할 경우 싱글따옴표('')를 사용

🎁 아스키 코드
- 숫자로 문자를 표현하기 위한 일종의 약속
- 특수문자, 숫자, 문자에 번호를 부여해서 컴퓨터에서 처리하기 쉽도록 만든 방법

논리
boolean     1byte   true, false 저장
    예)  boolean b1 = true;


6. 연산자
- 프로그램에서 데이터를 처리하여 결과를 산출
- 연산에 사용되는 표시나 기호

산술 연산자
+, -, *, /, %(나머지)
    예) 10 % 3 = 1

비교 연산자
>, <, >=, <=, ==(같다), !=(다르다)
    예) 10 > 3 = true , 결과는 항상 논리형

증감 연산자
- 변수의 값을 1증가 또는 1감소 시키는 연산자
++변수 : 다른 연산을 수행하기 전에 값을 1증가시킴
--변수 : 다른 연산을 수행하기 전에 값을 1감소시킴
변수++ : 다른 연산을 먼저 수행한 후에 값을 1증가시킴
변수-- : 다른 연산을 먼저 수행한 후에 값을 1감소시킴

int x = 1;
    예) int result = ++x;
    result : 2, x : 2
    예) int result = x++;
    result : 1, x : 2

대입 연산자
- 값을 변수에 저장하는 연산자
= : 우측의 값을 좌측 변수에 저장
+= : 우측의 값을 좌측 변수와 더한뒤 다시 좌측 변수에 저장
    예 ) int num = 1;
        num += 1;   -> num = num + 1;
-= : 우측의 값을 좌측 변수와 뺀 뒤 다시 좌측 변수에 저장
*= : 우측의 값을 좌측 변수와 곱한 뒤 다시 좌측 변수에 저장
/= : 우측의 값을 좌측 변수와 나눈 뒤 다시 좌측 변수에 저장
%= : 우측의 값을 좌측 변수와 나머지 연산을 한 뒤 다시 좌측 변수에 저장

논리 연산자
- 논리곱(&&), 논리합(||), 배타적 논리합(^), 논리 부정(!) 연산
- 피연산자가 논리형(boolean)

    논리곱(&&)
        A       &&      B       결과
        true            true    true
        true            false   false
        false           true    false
        false           false   false

    예) 정보처리기사 조건
    평균점수가 60점이상이고, 각 과목당 점수가 40점 이상일 때 패스

    논리합(||)
        A       ||      B       결과
        true            true    true
        true            false   true
        false           true    true
        false           false   false

    예) 주민등록번호의 성별
    001011-3068518
    1번 또는 3번 또는 5번 또는 7번 또는 9번은 남자

    배타적 논리합(^) : XOR
        A       ^       B       결과
        true            true    false
        true            false   true
        false           true    true
        false           false   false

    논리 부정(!)
        !A          결과
        true        false
        false       true

        예)  boolean b1 = true;
             boolean result = !b1;  // result : false;

비트 연산자
- 데이터를 비트 단위로 연산
- &, |, ^, <<, >>

10진수 28을 2진수로 변환
10진수 25를 2진수로 변환
1을 true, 0을 false

    28 & 25 = 24
           32        16        8       4       2       1
                      1        1       1       0       0  (28)
    &                 1        1       0       0       1  (25)
    ------------------------------------------------------------
                      1        1       0       0       0  (24)

   28 | 25 = 24
          32        16        8       4       2       1
                     1        1       1       0       0  (28)
   |                 1        1       0       0       1  (25)
   ------------------------------------------------------------
                     1        1       1       0       1  (29)


   28 << 2 = 112
   64       32        16        8       4       2       1
                       1        1       1       0       0  (28)
   <<
   ------------------------------------------------------------
    1        1          1       0       0       0       0  (112)


   64       32        16        8       4       2       1
                       1        1       1       0       0  (28)
   >>
   ------------------------------------------------------------
                                         1       1      1  (7)


삼항 연산자
- 세 개의 피연산자가 필요로 하는 연산자
- 앞의 조건식에 따라 콜론(:) 앞뒤의 피연산자가 선택
- 조건 연산식
       조건식     ?       값 : 값
    (결과가 논리형)       true false


7. 타입 변환
- 연산은 기본적으로 같은 타입의 피연산자 간에만 수행
- 서로 다른 타입의 피연산자가 있을 경우 두 피연산자 중 크기가 큰 타입으로 자동 변환됨
    예) 10 + 5.0 = 15.0
    int + double = double (자동 타입변환)

    ✔ 강제 타입변환
    int -> byte
    (byte)변수명






